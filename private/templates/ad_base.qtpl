Advertisement base elements

{% 
  import (
    "geniusrabbit.dev/sspserver/internal/adsource"
    "geniusrabbit.dev/sspserver/internal/eventtraking/events"
  )
%}

{%code
  var Debug bool
  var ServiceDomain string
  var URLGen adsource.URLGenerator
%}

{% func adActionScript() %}{% collapsespace %}{% stripspace %}
<script type="text/javascript">
var t = new Date();
function e(u, st) {
  var delta = new Date() - t;
  var qPixel = new Image();
  qPixel.src = u+'&r='+st+'&d='+delta;
};
</script>
{% endstripspace %}{% endcollapsespace %}{% endfunc %}

{% func adHeader() %}{% collapsespace %}{% stripspace %}
  <!DOCTYPE html><html><head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta charset="utf-8" />
    <style type="text/css">
      *, body, html { margin: 0; padding: 0; border:none; }
      body, html { width: 100%; height: 100%; background: transparent }
      iframe[seamless] {
        background-color: transparent;
        border: 0px none transparent;
        padding: 0px;
        overflow: hidden;
        margin: 0;
      }
    </style>
  </head><body>
  {%= adActionScript() %}
{% endstripspace %}{% endcollapsespace %}{% endfunc %}


{% func adFooter() %}{% collapsespace %}{% stripspace %}
  </body></html>
{% endstripspace %}{% endcollapsespace %}{% endfunc %}


Generate pixel base code
{% func adPixel(adID, spotID, campID int, tag string) %}{% collapsespace %}{% stripspace %}
  <script type="text/javascript">
		function u{%d adID %}(st){}
  </script>
{% endstripspace %}{% endcollapsespace %}{% endfunc %}


Generate pixel base code for adresult item
{% func adPixelItem(ad adsource.ResponserItem, resp adsource.Responser) %}{% collapsespace %}{% stripspace %}
  {% if ad != nil && resp != nil %}
  <script type="text/javascript">
    {%code var u, _ = URLGen.PixelURL(events.Impression, events.StatusSuccess, ad, resp, false)  %}
    {%code var v, _ = URLGen.PixelURL(events.View, events.StatusSuccess, ad, resp, false)  %}
    function u{%d int(ad.AdID()) %}(st){e('{%s= u %}',st)}
    function v{%d int(ad.AdID()) %}(st){e('{%s= v %}',st)}
  </script>
  {% endif %}
{% endstripspace %}{% endcollapsespace %}{% endfunc %}

// { %code var uu, _ = URLGen.PixelLead(ad, resp, false)  % }
// <img src="{ %s= uu % }" />


{% func preloader() %}{% collapsespace %}{% stripspace %}
  <style>
    .loading {
      position: absolute;
      height: 100%;
      width: 100%;
      top: 0;
      left: 0;
      background: #fefefe;
      display: block;
      z-index: 1000;
    }
    .loading .progress {
      position: fixed;
      display: block;
      width: 100%;
      height: 1.5pt;
      background: deepskyblue;
    }
    .loading .progress:before {
      content: "";
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      transform: translateX(-100%);
      background: #ccc;
      animation: progress 3s ease infinite;
    }
    .loading .badge {
      position: absolute;
      left: 50%;
      top: 50%;
      display: block;
      padding: 3pt;
      margin: -15pt 0 0 -15pt;
      border: 1.5pt solid #ddd;
      border-radius: 5pt;
      font-family: Helvetica,sans-serif;
      font-size: 12pt;
      color: #ddd;
    }

    @-webkit-keyframes progress {
      50% {
        -webkit-transform: translateX(0%);
                transform: translateX(0%);
      }
      100% {
        -webkit-transform: translateX(100%);
                transform: translateX(100%);
      }
    }
    @keyframes progress {
      50% {
        -webkit-transform: translateX(0%);
                transform: translateX(0%);
      }
      100% {
        -webkit-transform: translateX(100%);
                transform: translateX(100%);
      }
    }
  }
  </style>
	<div id="loadingBlock" class="loading">
		<div class="progress"></div>
		<div class="badge">ADS</div>
	</div>
{% endstripspace %}{% endcollapsespace %}{% endfunc %}
